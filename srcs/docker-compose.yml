version: '3.9'

services:
  nginx:
    container_name: nginx
    build: ./requirements/nginx/
    image: nginx
    volumes:
      - wp_data:/var/www/html/
    ports:
      - "443:443"
    depends_on:
      - wordpress
    networks:
      - default
    expose:
      - 443
    restart: always
  wordpress:
    container_name: wordpress
    build: 
      context: ./requirements/wordpress/
      dockerfile: ./Dockerfile
      args:
        - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
        - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
        - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
        - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
        - WORDPRESS_SITE_URL=${WORDPRESS_SITE_URL}
        - WORDPRESS_SITE_TITLE=${WORDPRESS_SITE_TITLE}
        - WORDPRESS_ADMIN_USER=${WORDPRESS_ADMIN_USER}
        - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
        - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
        - WORDPRESS_USER_NAME=${WORDPRESS_USER_NAME}
        - WORDPRESS_USER_EMAIL=${WORDPRESS_USER_EMAIL}
        - WORDPRESS_USER_PASSWORD=${WORDPRESS_USER_PASSWORD}
        - WORDPRESS_USER_ROLE=${WORDPRESS_USER_ROLE}
    image: wordpress
    volumes:
    - wp_data:/var/www/html
    depends_on:
      - mariadb
    networks:
      - default
    expose:
      - 9000
    ports:
      - "9000:9000"
    restart: always
  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: ./Dockerfile
      args:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} 
    image: mariadb
    volumes:
      - db_data:/var/lib/mysql
    expose:
      - 3306
    ports:
      - "3306:3306"
    networks:
      - default
    restart: always
  static_site:
    container_name: static_site
    build:
      context: ./requirements/static_site
      dockerfile: ./Dockerfile
    image: static_site
    volumes:
      - static_site_data:/var/www/html/ninom
    expose:
      - 80
    networks:
      - default
    restart: always
  adminer:
    container_name: adminer
    build:
      context: ./requirements/adminer
      dockerfile: ./Dockerfile
    image: adminer
    networks:
      - default
    restart: always
  ftp:
    container_name: ftp
    build:
      context: ./requirements/ftp
      dockerfile: ./Dockerfile
      args:
        - FTP_USER=${FTP_USER}
        - FTP_PASS=${FTP_PASS}
    image: ftp
    networks:
      - default
    ports:
      - "21:21"
    volumes:
      - wp_data:/var/www/html
    restart: always
  redis:
    container_name: redis
    build:
      context: ./requirements/redis
      dockerfile: ./Dockerfile
    image: redis
    ports:
      - "6379:6379"
    networks:
      - default
    expose:
      - 6379
    restart: always
  jenkins:
    container_name: jenkins
    build:
      context: ./requirements/jenkins
      dockerfile: ./Dockerfile
    image: jenkins
    ports:
      - 8080:8080
      - 50000:50000
    networks:
      - default
    expose:
      - 8080
    volumes:
      - jenkins_home:/root/.jenkins/
      - wp_data:/var/www/html/
    restart: always
volumes:
  db_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/amaarifa/data/db_data'
  wp_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/amaarifa/data/wp_data'
  static_site_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/amaarifa/data/static_site'
  jenkins_home:
networks:
  default:

